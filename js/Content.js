/*
 * File: Content.js
 * Date: Thu Apr 07 2011 14:33:55 GMT-0300 (ADT)
 * 
 * This file was generated by Ext Designer version 1.1.2.
 * http://www.sencha.com/products/designer/
 *
 * This file will be generated the first time you export.
 *
 * You should implement event handling and custom methods in this
 * class.
 */

Content = Ext.extend(ContentUi, {
    initComponent: function() {
        Content.superclass.initComponent.call(this);
        var toolbar = this.getTopToolbar();
        var content_panel = this.get('adr-content-panel');
        var filter = toolbar.get('adr-content-filter');
        var sort = toolbar.get('adr-content-sort');
        var search_text = toolbar.get('adr-content-search-text');
        var add = toolbar.get('adr-content-add');
        var subcollection = toolbar.get('adr-subcollection-add');
        content_panel.addListener('afterrender', function() {
            this.getFooterToolbar().doRefresh();
        });

        filter.addListener('change', function() {
            var filter = {
                "All Content": 'all',
                "Only Collections": 'collections',
                "Only Objects": 'objects'
            };
            var pager = content_panel.getFooterToolbar();
            var lastOptions = pager.store.lastOptions;
            lastOptions.params.filter = filter[this.activeItem.text];
            pager.store.reload(lastOptions);
        });
        
        sort.addListener('change', function() {
            var sort = {
                "Title A-Z": 'alpha-asc',
                "Title Z-A": 'alpha-desc',
                "Newest": 'date-newest',
                "Oldest": 'date-oldest'
            };
            var pager = content_panel.getFooterToolbar();
            var lastOptions = pager.store.lastOptions;
            lastOptions.params.sort = sort[this.activeItem.text];
            pager.store.reload(lastOptions);
        });

        search_text.onTriggerClick = function(event) {
            var pager = content_panel.getFooterToolbar();
            var lastOptions = pager.store.lastOptions;
            lastOptions.params.search_text = search_text.getValue();
            pager.store.reload(lastOptions);
        };

        add.disable();
        if (UserCollectionPermissions.content_canAddNewObject) {
            add.enable();
            
            add.addListener('click', function() {
                var location = window.location;
                var page = location.protocol + '//' + location.host + '/formbuilder/ingest/';
                if(typeof(ADRCollection.pid) != 'undefined' && ADRCollection.pid != 'undefined') {
                    page = page + ADRCollection.pid;
                }
                window.location = page;
            });
        }

        subcollection.disable();
        if (UserCollectionPermissions.content_canAddNewCollection) {
        	subcollection.enable();
            
            subcollection.addListener('click', function() {
                var location = window.location;
                var page = location.protocol + '//' + location.host + '/islandora_co_manager/create_collection/';
                if(typeof(ADRCollection.pid) != 'undefined' && ADRCollection.pid != 'undefined') {
                    page = page + ADRCollection.pid;
                }
                window.location = page;
            });
        }
    }
});
Ext.reg('Content', Content);